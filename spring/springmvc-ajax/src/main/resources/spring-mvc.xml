<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--
    1. 注解驱动
    2. 静态资源过滤, 让SpringMVC不处理静态资源，比如 .css  .js  .html  .mp3  .mp4
    3. 扫描包, 扫描controller层的包
    4. 视图解析器
    -->

    <!--  1. 注解驱动, 支持mvc注解驱动
       在spring中一般采用@RequestMapping注解来完成映射关系
       想要使@RequestMapping注解生效
       必须上下文同时注册DefaultAnnotationHandlerMapping
       和一个AnnotationMethodHandlerAdapter实例
       这两个实例分别在类级别和方法级别处理
       而annotation-driven配置帮助我们自动完成上述两个实例的注入
    -->
    <mvc:annotation-driven/>

    <!--  2. 静态资源过滤, 让SpringMVC不处理静态资源，比如 .css  .js  .html  .mp3  .mp4   -->
    <mvc:default-servlet-handler/>

    <!--  3. 扫描包, 扫描controller层的包   -->
    <context:component-scan base-package="com.nzhao.controller"/>

    <!--  4. 视图解析器ViewResolver, 不能省略,
        现在使用Spring的视图解析器，未来我们可以换成Thymeleaf, Freemarker 等模板引擎
      -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--    注意最后一个/一定要写，不然路径拼写错误    -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

</beans>